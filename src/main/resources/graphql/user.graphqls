type Query {
    userLogin(user: LoginUserRequest!): UserResponse
}

type Mutation {
    newUser(user: RegisterUserRequest!): UserResponse
    updateUser(user: RegisterUserRequest!, userId: ID!): UserResponse
<<<<<<< Updated upstream
=======
    deleteUser(userId: ID!): String
    addRole(role: ROLES): String
}

enum ROLES {
    ROLE_GENERAL
    ROLE_ADMIN
    ROLE_BUSINESS_OWNER
>>>>>>> Stashed changes
}

input RegisterUserRequest {
    email: String!
    firstName: String!
    lastName: String!
    password: String!
}
input LoginUserRequest {
    email: String!
    password: String!
}

type UserResponse {
    id: ID!
    firstName: String!
    lastName: String!
    email: String!
    favorites: [FavoriteResponse]
}